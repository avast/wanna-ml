[tool.poetry]
authors = ["Joao Da Silva <joao.silva1@avast.com>", "Michal Mrazek <michal.mrazek@avast.com>"]
description = "CLI tool for managing ML projects on Vertex AI"
name = "wanna-ml"
version = "0.0.0"
packages = [
    { include = "wanna", from = "src" },
]
include = ["CHANGELOG.md"]
readme = "README.md"
license = "MIT"
keywords = ["mlops", "vertex-ai", "GCP", "google-cloud-platform", "machine-learning"]
homepage = "https://avast.github.io/wanna-ml"
documentation = "https://avast.github.io/wanna-ml"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]

[tool.poetry.extras]
test = ["pytest"]

[tool.poetry.dependencies]
case-converter = "^1.1.0"
cookiecutter = "^2.1.1"
cron-validator = "^1.0.6"
dirhash = "^0.2.1"
email-validator = "^1.3.0"
emoji = "^1.7.0"
gitpython = "^3.1.31"
google-api-core = "^2.11.0"
google-cloud-aiplatform = "^1.22.1"
google-cloud-build = "^3.13.0"
google-cloud-compute = "^1.10.1"
google-cloud-functions = "^1.11.0"
google-cloud-logging = "^3.5.0"
google-cloud-monitoring = "^2.14.1"
google-cloud-notebooks = "^1.6.1"
google-cloud-pipeline-components = "^1.0.39"
google-cloud-resource-manager = "^1.9.0"
google-cloud-scheduler = "^2.10.0"
google-cloud-storage = "^2.7.0"
gcloud-config-helper = "^0.3.1"
halo = "^0.0.31"
Jinja2 = "^3.1.2"
kfp = "^1.8.19"
pathvalidate = "^2.5.2"
pydantic = "^1.10.5"
python = ">=3.8.1,<3.11"
python-on-whales = "^0.59.0"
pyyaml-include = "^1.3"
PyYAML = "^5.4.0"
smart-open = {extras = ["gcs"], version = "^6.3.0"}
treelib = "^1.6.1"
typer = "0.7.0"
waiting = "^1.4.1"
rich = "^13.3.1"
scandir = [
    {version = "^1.10.0", platform="win32" }
]
pendulum = "^2.1.2"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
flake8 = "^6.0.0"
isort = "^5.10.1"
mkdocs-click = "^0.7.0"
mkdocs-material = "^8.1.6"
mkdocs-typer = "^0.0.2"
mkdocstrings = "^0.19.0"
mkdocstrings-python = "^0.7.1"
mkautodoc = "^0.2.0"
mock = "^4.0.3"
mypy = "^1.0.1"
pre-commit = "^2.19.0"
pylint = "^2.12.2"
pylint-pydantic = "^0.1.4"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-mock = "^3.6.1"
scikit-learn = "^1.2.1"
taskipy = "^1.9.0"
types-mock = "^4.0.12"
types-pyyaml = "^6.0.5"
types-requests = "^2.27.14"
types-setuptools = "^63.2.3"
xgboost = "^1.7.4"
markdown = "^3.3.6"

[tool.mypy]
exclude = "src/wanna/components/templates"
follow_imports = "silent"
strict = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
implicit_reexport = true
ignore_missing_imports = true

[tool.'mypy-google.*']
ignore_missing_imports = true

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.poetry.scripts]
wanna = "wanna.cli.__main__:wanna"

[tool.pytest.ini_options]
addopts = "--verbose -s --cov-report term --cov-report xml:coverage.xml --cov=src --durations=0 --ignore=src/wanna/components/templates"
filterwarnings = [
    "error",
    "ignore::UserWarning", # note the use of single quote below to denote "raw" strings in TOML
    'ignore::DeprecationWarning',
    'ignore::SyntaxWarning',
    'ignore::ResourceWarning',
]

[tool.taskipy.tasks]
docs-deploy = "mkdocs gh-deploy --force"
docs-serve = "mkdocs serve"
build = "pre-commit run --all-files"
pre_build = "pre-commit install"
mypy = "mypy ./src"
lint = "pylint ./src"

[tool.black]
extend-ignore = "E203"
max-line-length = 120

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
