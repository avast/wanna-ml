[tool.poetry]
authors = ["{{cookiecutter.project_owner_fullname}}", "{{cookiecutter.project_owner_email}}"]
description = "{{cookiecutter.project_description}}"
name = "{{cookiecutter.project_slug}}"
packages = [
  {include = "{{cookiecutter.project_slug}}", from = "pipeline"},
]
version = "{{cookiecutter.project_version}}"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
google-cloud-pipeline-components= "^1.0.5"
kfp = "^1.8.12"
wanna-ml = "0.1.3"
pandas = "^1.4.2"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
pylint = "^2.13.8"
pytest = "^7.1.2"
taskipy = "^1.10.1"

[tool.taskipy.tasks]
black = "black pipeline"
check = "task isort && task black && task pylint"
isort = "isort pipeline"
pylint = "pylint pipeline"

[tool.pytest.ini_options]
addopts = "--verbose --pylint --pylint-rcfile=pyproject.toml --cov={{cookiecutter.project_slug}} --cov-report html --mypy"
filterwarnings = [
  "error",
  "ignore::UserWarning", # note the use of single quote below to denote "raw" strings in TOML
  'ignore::DeprecationWarning',
]

[tool.pylint.master]
good-names = "logger,e,i,j,n,m,f,_,xs,ys,df"
ignore = "sphinx"

[tool.pylint.messages_control]
disable = "all"
enable = """,
    unused-import,
    fixme,
    useless-object-inheritance,
    unused-variable,
    unused-argument,
    unexpected-keyword-arg,
    string,
    unreachable,
    invalid-name,
    logging-format-interpolation,
    logging-fstring-interpolation,
    unnecesary-pass,
    """
ignored-argument-names = "_.*|^ignored_|^unused_|args|kwargs"

[black]
extend-ignore = "E203"
max-line-length = 120

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
